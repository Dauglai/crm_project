import React, { useState, useContext, useEffect } from "react";
import { Link } from "react-router-dom";
import { AuthContext } from "../../../context";
import MyButton from "../button/MyButton";
import "./Navbar.css";
import NotificationDropdown from "../../NotificationDropDown";

function Navbar() {
    const { isAuth, setIsAuth } = useContext(AuthContext);
    const [showDropdown, setShowDropdown] = useState(false);
    const [showMenu, setShowMenu] = useState(false);
    const [dropdownVisible, setDropdownVisible] = useState(false);

    useEffect(() => {
        const handleClickOutside = (event) => {
            if (!event.target.closest(".dropdown") && !event.target.closest(".tasks-menu")) {
                setShowDropdown(false);
            }
        };
        document.addEventListener("click", handleClickOutside);
        return () => {
            document.removeEventListener("click", handleClickOutside);
        };
    }, []);

    const handleLogout = () => {
        setIsAuth(false);
        localStorage.removeItem("auth");
        fetch("http://localhost:8000/api-auth/logout/", {
            method: "POST",
            credentials: "include",
        })
            .then((response) => {
                if (response.ok) {
                    console.log("User logged out");
                }
            })
            .catch((error) => {
                console.error("Error logging out:", error);
            });
    };

    return (
        <>
            <div className="header">
                <img src={require("./margin.png")} alt="–õ–æ–≥–æ—Ç–∏–ø" className="header_logo"/>
                <p>MiniCRM</p>

                <button className="menu-button" onClick={() => setShowMenu(true)}>
                    ‚ò∞ –ú–µ–Ω—é
                </button>

                <div className="header_nav">
                    <ul className="header__list">
                        <li className="header__list-item">
                            <Link to="/about">–ì–ª–∞–≤–Ω–∞—è</Link>
                        </li>
                        <li
                            className="header__list-item tasks-menu"
                            onMouseEnter={() => setShowDropdown(true)}
                            onMouseLeave={() => setShowDropdown(false)}
                        >
                            <Link to="/tasks">–ó–∞–¥–∞—á–∏</Link>
                            {showDropdown && (
                                <ul className="dropdown">
                                    <li><Link to="/tasks_by_day">–ú–æ–∏ –∑–∞–¥–∞—á–∏ –ø–æ –¥–Ω—è–º</Link></li>
                                    <li><Link to="/tasks">–í—Å–µ –∑–∞–¥–∞—á–∏</Link></li>
                                    <li><Link to="/tasks/create">–°–æ–∑–¥–∞—Ç—å –∑–∞–¥–∞—á—É</Link></li>
                                </ul>
                            )}
                        </li>
                        <li className="header__list-item">
                            <Link to="/profile">–ü—Ä–æ—Ñ–∏–ª—å</Link>
                        </li>
                    </ul>
                </div>

                <div className="nav-icons">
                    <button className="notification-icon" onClick={() => setDropdownVisible(!dropdownVisible)}>
                        üîî
                    </button>
                    {dropdownVisible && <NotificationDropdown/>}
                </div>

                <div className="header_button">
                    <MyButton onClick={handleLogout}>–í—ã–π—Ç–∏</MyButton>
                </div>
            </div>

            {/* –í—ã–¥–≤–∏–∂–Ω–æ–µ –º–µ–Ω—é */}
            <div className={`side-menu ${showMenu ? "open" : ""}`}>
                <button className="close-button" onClick={() => setShowMenu(false)}>√ó</button>
                <ul>
                    <li><Link to="/products">–ù–æ–º–µ–Ω–∫–ª–∞—Ç—É—Ä–∞</Link></li>
                    <li><Link to="/outlets">–¢–æ—Ä–≥–æ–≤—ã–µ —Ç–æ—á–∫–∏</Link></li>
                    <li><Link to="/settings">–ù–∞—Å—Ç—Ä–æ–π–∫–∏</Link></li>
                </ul>
            </div>

            {/* –ó–∞—Ç–µ–º–Ω–µ–Ω–∏–µ —Ñ–æ–Ω–∞ */}
            <div className={`overlay ${showMenu ? "active" : ""}`} onClick={() => setShowMenu(false)}></div>
        </>
    );
}

export default Navbar;
